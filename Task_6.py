# Дан список: ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и кавычку
# после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
#
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
#
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже. Главное:
# дополнить числа до двух разрядов нулём!
#


def get_sing(x):
    if x[0] in '+-':
        return x[0]

arr = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', '+5', 'градусов']

i = 0
while i < len(arr):
    sign = get_sing(arr[i])
    if arr[i].isdigit() or (sign and arr[i][1:].isdigit()):
        if sign:
            arr[i] = sign + arr[i][1:].zfill(2)
        else:
            arr[i] = arr[i].zfill(2)

        arr.insert(i, '"')
        arr.insert(i + 2, '"')
        i += 2
    i += 1
print(arr)





# * (вместо задачи 2) Решить задачу 2 не создавая новый список (как говорят, in place). Эта задача намного серьёзнее, чем может сначала
# показаться.
# Дан список, содержащий искажённые данные с должностями и именами сотрудников: ['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА',
# 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
# Известно, что имя сотрудника всегда в конце строки. Сформировать и вывести на экран фразы вида: 'Привет, Игорь!' Подумать, как получить
# имена сотрудников из элементов списка, как привести их к корректному виду. Можно ли при этом не создавать новый список?


# x = 'Привет, {}!'
#
# incorrect_staff =['инженер-конструктор Игорь', 'главный бухгалтер МАРИНА', 'токарь высшего разряда нИКОЛАй', 'директор аэлита']
#
# for correct_staff in incorrect_staff:
#     print(x.format(correct_staff.split()[-1].title()))





# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать,
# как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?




# list = [57.8, 46.51, 97, 85.12, 56.65, 40.33, 24.12, 62.8, 16.84, 74.5]
#
# end_word: str = ","
#
# for i, num in enumerate(list):
#     fix_price = str(f"{float(num):.2f}").split(".")
#     if i == len(list) - 1:
#         end_word = "\n"
#     print(f"{fix_price[0]} руб {fix_price[1]} коп", end=end_word)
#
# list.sort()
# print(list)
#
# copy_of_list = list.copy()
# copy_of_list.sort(reverse=True)
# print(copy_of_list)
#
# print("Цены пяти самых дорогих товаров", copy_of_list[:5])
